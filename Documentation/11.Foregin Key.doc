CREATE TABLE dept (
    id INT PRIMARY KEY,
    name VARCHAR(50)
);

CREATE TABLE teacher (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    dept_id INT,
    FOREIGN KEY (dept_id) REFERENCES dept(id)
);

To Visualise Tables Go to Databases Reverse Engineer and Do Next, Next Select Database & Tabels Only
You want to visulaise and Finish



**Cascading for FK**

* **On Update Cascade:** When you create a foreign key using this option, the referencing rows in the child table are updated when the referenced row is updated in the parent table.
* **On Delete Cascade:** When you create a foreign key using this option, the referencing rows in the child table are deleted when the referenced row is deleted in the parent table.

**Example:**

```sql
CREATE TABLE student (
    id INT PRIMARY KEY,
    courseID INT,
    FOREIGN KEY (courseID) REFERENCES course (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);
```

**Explanation:**

This code creates a table named `student` with the following columns:

- `id`: A unique identifier for each student.
- `courseID`: A foreign key that references the `id` column in the `course` table.
- The `ON DELETE CASCADE` and `ON UPDATE CASCADE` options specify that if a row in the `course` table is deleted or updated, the corresponding rows in the `student` table will be deleted or updated automatically.
